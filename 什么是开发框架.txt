       买房子常听到“这房子是砖混结构还是框架结构？”的问题。
框架结构的房子，是先用混凝土或钢材将梁和柱等连接起来构成承重体系，
然后再用空心砖等材料在需要的地方填充起来做成墙。
这种结构的建筑施工的周期短，房子的质量好，大型的建筑常用这种结构。
我们观察工地发现，工人盖楼房就是在搭框架，好像哪个楼都差不多，
但经过后期的分隔和装修之后，建筑的功能却又各异。
这些不同的功能，依赖于搭好框架以后的工作。
　　因为初学者对整个程序的结构把握起来有困难，我在给大一的学生布置作业时，
会给出部分的代码，反映整个程序的骨架，学生只要将其中缺少的一部分填上即可。
给出的这一部分代码，可以称得上是最简单的框架，降低了学生做作业的难度，
不至于频受打击，至少是可以少写些代码了。
　　在软件项目的开发中，具有一定规模的软件系统已经非常复杂，
涉及到的问题也很多，开发周期也变得更长。
而同类的软件，如不同机构的主页，
在结构上有很多的雷同之处，区别只在于核心的业务实现部分。
于是，将这些雷同的部分抽取出来，往往对应的就是关于软件整体结构的部分，
形成的就是同类软件中可以重用的软件框架。
有些大的公司和机构专门研究工程中的共性问题，将框架作为他们的产品推出。
在软件项目开发中，技术人员使用成熟的框架，只需要集中精力完成系统的业务逻辑设计即可。
这相当于盖楼时直接吊装来一个现成的建筑框架，让别人先期帮你完成一些基础工作，
你所做的是根据具体的需要，在框架中砌墙，以及做装修。
框架一般是成熟、稳健、安全的，经过了很多人使用，有良好的结构，在系统质量方面占有优势。
框架其实就是某种应用的半成品，供你选用完成你自己的应用系统。
这样，软件项目开发也像是做填空题，降低了难度，节省了时间，提高了质量。
　　按照软件工程的术语，框架是可以复用的设计构件，
规定了应用的体系结构，阐明了整个设计、协作构件之间的依赖关系、责任分配和控制流程。
也有人给出定义：框架是在一个给定的问题领域内，一个应用程序的一部分设计与实现。
　　目前流行的大部分语言在开发时都可以利用框架。
Java语言在J2EE开发中常用spring框架，在开发web应用时可以使用Struts框架，
还有为数众多的开源框架支持Java语言在不同领域的开发。
.NET框架是由微软开发，是一个致力于敏捷软件开发、
快速应用开发、平台无关性的软件开发平台，主要的语言是C#。
支持PHP web程序开发的框架也为数众多，Zend框架在开发社区中有大量的追随者。
著名的Ajax框架整合了JavaScript、XML、CSS等已有技术，
成为创建交互式web应用的主要开发技术。
对于各种成熟的IDE，也为框架提供了支持。
开发一个程序，常常从先设置框架开始。
IDE中提供了模板，或者向导程序，通过用户自行选择一些参数，
从而生成定制化的框架，供开发者进一步开发使用。
　　了解了框架的初学者，常有的疑问是：“我刚接触计算机语言和程序，是否需要学习框架？”
我的观点，可以暂缓。编程的基本功和核心能力，不涉及框架。
在一般性程序设计学习中解决，而到了要学习做项目的阶段，
框架才成为必要的选择。
具备了较强的程序设计的一般能力，为理解和掌握框架提供了支持，
才能够用好框架，也能带来学习的良好感受和较高效率。
如果有机会，有额外的精力，可以在课外对框架进行先行体验。
与框架类似和相关的话题，还有模式、架构，
解决的也是大型软件生产中的质量、效率问题，这些可以放在高年级的时候解决。
对于专业的学生，并不是会使用框架就可以的了。
要从事应用开发领域的工作，应该能够驾驭框架，
这需要对语言、编程方法有深刻理解，
需要建立在对计算机和软件的体系结构有深入了解的基础之上，
这是学习各种专业基础课要达到的目标。
在我的学生中，就业出现困难的，往往是基础课没有投入学习，
而临到毕业季就业潮了，匆忙从框架入手去学，纵使找得着工作，
不论在工资上的差距，要想在行业中立足，也需要在走上工作岗位后再加倍努力了。